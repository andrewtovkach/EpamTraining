@model DAL.Models.SaleInfo

@{
    ViewBag.Title = "Create SaleInfo";
}

<h2>Create SaleInfo</h2>

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <fieldset>
        <div class="form-group">
            @Html.LabelFor(model => model.Date, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(model => model.Date, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Date)
        </div>

        <div class="form-group">
            @Html.Label("Client", new { @class = "col-md-2 control-label" })
            @Html.DropDownListFor(model => model.Client.Id, ViewBag.Clients as SelectList, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.Label("Product", new { @class = "col-md-2 control-label" })
            @Html.DropDownListFor(model => model.Product.Id, ViewBag.Products as SelectList, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.Label("Manager", new { @class = "col-md-2 control-label" })
            @Html.DropDownListFor(model => model.FileInfo.Manager.Id, ViewBag.Managers as SelectList, new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Cost, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(model => model.Cost, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Cost)
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Currency, new { @class = "col-md-2 control-label" })
            @Html.TextBoxFor(model => model.Currency, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Currency)
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="CREATE" class="btn btn-primary" />
            </div>
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
